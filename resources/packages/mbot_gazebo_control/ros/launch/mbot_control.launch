<?xml version="1.0"?>
<launch>

  <!-- Control all sim mbot joints: base, head and arm using ROS control.
       NOTE: position, velocity and trajectory controllers for the arm are available
       however we load and start by default the trajectory controller -->

  <!-- get from env the ROBOT varibale -->
  <arg name="robot" default="$(optenv ROBOT !!ROBOT env NOT SET!!)" />

  <!-- identify from ROBOT env if arm is required -->
  <!-- <arg name="arm_required" value="$(eval robot!='mbot05')"/> -->
  <arg name="arm_required" value="true"/>

  <!-- the location of the control parameters -->
  <arg name="ctrl_config_base_path" default="$(find mbot_gazebo_control)/ros/config" />

  <!-- load base, neck, head cam and joint state parameters to param server -->
  <rosparam file="$(arg ctrl_config_base_path)/head_position_control.yaml" command="load" />
  <rosparam file="$(arg ctrl_config_base_path)/joint_state_control.yaml" command="load" />

  <!-- spawn base, neck, head cam and joint state controllers -->
  <node pkg="controller_manager" type="spawner" name="basic_ctrl_spawner"
        output="screen" args="head_position_controller
                              head_camera_position_controller
                              joint_state_controller" />


  <!-- 1. subscribe to cmd_head std_msgs/UInt8MultiArray (with position/velocity info)
          and republish to gazebo command topic on the form std_msgs/Float64 (position only) -->
  <node pkg="mbot_gazebo_control" type="mbot_head_republisher" name="mbot_head_republisher_node" output="screen" />

  <!-- node to automatically switch between controllers (position, velocity, trajectory) based on what is needed -->
  <node pkg="mbot_gazebo_control" type="automated_switch_ctrl" name="automated_switch_ctrl_node" output="screen" />

</launch>
