<?xml version="1.0" ?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from /home/socrob/ros_ws/src/mbot_description/xacro/mbot_with_left_ist_arm.urdf.xacro | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<robot name="mbot" xmlns:xacro="http://wiki.ros.org/xacro">
  <!-- import xacro macros to assemble a robot -->
  <!-- end of mbot arm macro -->
  <gazebo>
    <plugin filename="libroboticsgroup_gazebo_mimic_joint_plugin.so" name="motor_base_to_left_link_front_mimic_plugin">
      <joint>left_arm_gripper_joint</joint>
      <mimicJoint>left_arm_motor_base_to_left_link_front</mimicJoint>
      <multiplier>-1.0</multiplier>
      <offset>0.0</offset>
    </plugin>
  </gazebo>
  <gazebo>
    <plugin filename="libroboticsgroup_gazebo_mimic_joint_plugin.so" name="motor_base_to_left_link_back_mimic_plugin">
      <joint>left_arm_gripper_joint</joint>
      <mimicJoint>left_arm_motor_base_to_left_link_back</mimicJoint>
      <multiplier>-1.0</multiplier>
      <offset>0.0</offset>
    </plugin>
  </gazebo>
  <gazebo>
    <plugin filename="libroboticsgroup_gazebo_mimic_joint_plugin.so" name="left_link_back_to_one_finger_mimic_plugin">
      <joint>left_arm_gripper_joint</joint>
      <mimicJoint>left_arm_left_link_back_to_one_finger</mimicJoint>
      <multiplier>1.0</multiplier>
      <offset>0.0</offset>
    </plugin>
  </gazebo>
  <gazebo>
    <plugin filename="libroboticsgroup_gazebo_mimic_joint_plugin.so" name="motor_base_to_right_link_back_mimic_plugin">
      <joint>left_arm_gripper_joint</joint>
      <mimicJoint>left_arm_motor_base_to_right_link_back</mimicJoint>
      <multiplier>1.0</multiplier>
      <offset>0.0</offset>
    </plugin>
  </gazebo>
  <gazebo>
    <plugin filename="libroboticsgroup_gazebo_mimic_joint_plugin.so" name="right_link_back_to_two_fingers_mimic_plugin">
      <joint>left_arm_gripper_joint</joint>
      <mimicJoint>left_arm_right_link_back_to_two_fingers</mimicJoint>
      <multiplier>-1.0</multiplier>
      <offset>0.0</offset>
    </plugin>
  </gazebo>
  <!--<gazebo> ROS control publishes joint states currently, so no need for gazebo to do it
    <plugin name="joint_state_publisher"
            filename="libgazebo_ros_joint_state_publisher.so">
      <jointName>left_arm_joint0, left_arm_joint1, left_arm_joint2, left_arm_joint3, left_arm_joint4, left_arm_joint5,
            left_arm_joint6, left_arm_gripper_joint</jointName>
      <robotNamespace>/</robotNamespace>
      <updateRate>50.0</updateRate>
    </plugin>
  </gazebo>-->
  <transmission name="left_arm_joint0_arm_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="left_arm_joint0">
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </joint>
    <actuator name="left_arm_joint0_actuator">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <transmission name="left_arm_joint1_arm_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="left_arm_joint1">
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </joint>
    <actuator name="left_arm_joint1_actuator">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <transmission name="left_arm_joint2_arm_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="left_arm_joint2">
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </joint>
    <actuator name="left_arm_joint2_actuator">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <transmission name="left_arm_joint3_arm_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="left_arm_joint3">
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </joint>
    <actuator name="left_arm_joint3_actuator">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <transmission name="left_arm_joint4_arm_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="left_arm_joint4">
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </joint>
    <actuator name="left_arm_joint4_actuator">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <transmission name="left_arm_joint5_arm_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="left_arm_joint5">
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </joint>
    <actuator name="left_arm_joint5_actuator">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <transmission name="left_arm_joint6_arm_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="left_arm_joint6">
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </joint>
    <actuator name="left_arm_joint6_actuator">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <transmission name="left_arm_gripper_joint_arm_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="left_arm_gripper_joint">
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </joint>
    <actuator name="left_arm_gripper_joint_actuator">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <link name="left_arm_base_link">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0" />
      <geometry>
        <mesh filename="package://cyton_gamma_1500_description/meshes/arm/base.dae" />
      </geometry>
    </visual>
    <collision>
      <origin xyz="0 0.0115 0.047" />
      <geometry>
        <box size="0.154 0.177 0.094" />
      </geometry>
    </collision>
    <!--inertial>
        <mass value="${small_mass}" />
        <origin rpy="0 0 0" xyz="0 0 0"/>
        <inertia ixx="1.1027" iyy="1.1027" izz="1.1027"
                 ixy="0" ixz="0" iyz="0"/>
      </inertial-->
    <inertial>
      <mass value="1.4" />
      <origin xyz="0 0 0" />
      <inertia ixx="0.2248838665" ixy="0.0" ixz="0.0" iyy="0.224890078997" iyz="0.0" izz="0.000661645568675" />
    </inertial>
  </link>
  <joint name="left_arm_joint0" type="revolute">
    <parent link="left_arm_base_link" />
    <child link="left_arm_shoulder_roll" />
    <origin rpy="0 0 0" xyz="0 0 0.05315" />
    <limit effort="100.0" lower="-2.5509" upper="2.5585" velocity="1.0" />
    <axis xyz="0 0 1" />
  </joint>
  <link name="left_arm_shoulder_roll">
    <visual>
      <origin rpy="0 0 0.384" xyz="0 0 0" />
      <geometry>
        <mesh filename="package://cyton_gamma_1500_description/meshes/arm/shoulder_roll.dae" />
      </geometry>
    </visual>
    <collision>
      <origin rpy="1.5708 0 0" xyz="0 0 0.0587" />
      <geometry>
        <box size="0.09829 0.18143 0.08392" />
      </geometry>
    </collision>
    <!--inertial>
        <mass value="${small_mass}" />
        <origin rpy="0 0 0" xyz="0 0 0"/>
        <inertia ixx=".1027" iyy=".1027" izz=".1027"
                 ixy="0" ixz="0" iyz="0"/>
      </inertial-->
    <inertial>
      <mass value="40" />
      <!-- This needs to be calculated different because it is a different kind of torque -->
      <origin xyz="0 0 0" />
      <inertia ixx="0.133197984387" ixy="0.0" ixz="0.0" iyy="0.141925839896" iyz="0.0" izz="0.0556782793953" />
    </inertial>
  </link>
  <joint name="left_arm_joint1" type="revolute">
    <parent link="left_arm_shoulder_roll" />
    <child link="left_arm_shoulder_pitch" />
    <origin rpy="0 0 0" xyz="0.0205 0 0.12435" />
    <limit effort="100.0" lower="-1.707" upper="1.6379" velocity="1.0" />
    <axis xyz="1 0 0" />
  </joint>
  <link name="left_arm_shoulder_pitch">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0" />
      <geometry>
        <mesh filename="package://cyton_gamma_1500_description/meshes/arm/shoulder_pitch.dae" />
      </geometry>
    </visual>
    <collision>
      <origin rpy="1.5708 0 0" xyz="-0.02 -0.001 0.064" />
      <geometry>
        <box size="0.0709 0.19363 0.083" />
      </geometry>
    </collision>
    <!--inertial>
        <mass value="${small_mass}" />
        <origin rpy="0 0 0" xyz="0 0 0"/>
        <inertia ixx=".0827" iyy=".0827" izz=".0827"
                 ixy="0" ixz="0" iyz="0"/>
      </inertial-->
    <inertial>
      <mass value="1" />
      <origin xyz="0 0 0" />
      <inertia ixx="0.103266402435" ixy="0.0" ixz="0.0" iyy="0.103270839933" iyz="0.0" izz="0.000472603977625" />
    </inertial>
  </link>
  <joint name="left_arm_joint2" type="revolute">
    <parent link="left_arm_shoulder_pitch" />
    <child link="left_arm_shoulder_yaw" />
    <origin rpy="0 0 0" xyz="-0.0215 -0.0205 0.1255" />
    <limit effort="100.0" lower="-1.5459" upper="1.73" velocity="1.0" />
    <axis xyz="0 -1 0" />
  </joint>
  <link name="left_arm_shoulder_yaw">
    <visual>
      <origin rpy="0 0 -1.5708" xyz="0 0 0.0" />
      <geometry>
        <mesh filename="package://cyton_gamma_1500_description/meshes/arm/shoulder_yaw.dae" />
      </geometry>
    </visual>
    <collision>
      <origin rpy="1.5708 0 -1.5708" xyz="-0.003 0.0225 0.057" />
      <geometry>
        <box size="0.0717 0.1846 0.0756" />
      </geometry>
    </collision>
    <!--inertial>
        <mass value="${small_mass}"/>
        <origin rpy="0 0 0" xyz="0 0 0"/>
        <inertia ixx=".0627" iyy=".0627" izz=".0627"
                 ixy="0" ixz="0" iyz="0"/>
      </inertial-->
    <inertial>
      <mass value="0.8" />
      <origin xyz="0 0 0" />
      <inertia ixx="0.0564055701044" ixy="0.0" ixz="0.0" iyy="0.056409120103" iyz="0.0" izz="0.0003780831821" />
    </inertial>
  </link>
  <joint name="left_arm_joint3" type="revolute">
    <parent link="left_arm_shoulder_yaw" />
    <child link="left_arm_elbow_pitch" />
    <origin rpy="0 0 0" xyz="0.018 0.0206 0.1158" />
    <limit effort="100.0" lower="-1.6072" upper="1.6149" velocity="1.0" />
    <axis xyz="1 0 0" />
  </joint>
  <link name="left_arm_elbow_pitch">
    <visual>
      <origin rpy="1.5708 0 3.1416" xyz="0 0 0" />
      <geometry>
        <mesh filename="package://cyton_gamma_1500_description/meshes/arm/elbow_pitch.dae" />
      </geometry>
    </visual>
    <collision>
      <origin rpy="1.5708 0 3.1416" xyz="-0.017 0.004 0.0461" />
      <geometry>
        <box size="0.0549 0.1557 0.076" />
      </geometry>
    </collision>
    <!--inertial>
        <mass value="${small_mass}" />
        <origin rpy="0 0 0" xyz="0 0 0"/>
        <inertia ixx=".0327" iyy=".0327" izz=".0327"
                 ixy="0" ixz="0" iyz="0"/>
      </inertial-->
    <inertial>
      <mass value="0.6" />
      <origin xyz="0 0 0" />
      <inertia ixx="0.0270562236775" ixy="0.0" ixz="0.0" iyy="0.0270588861764" iyz="0.0" izz="0.000283562386575" />
    </inertial>
  </link>
  <joint name="left_arm_joint4" type="revolute">
    <parent link="left_arm_elbow_pitch" />
    <child link="left_arm_elbow_yaw" />
    <origin rpy="0 0 0" xyz="-0.0171 -0.018 0.09746" />
    <limit effort="100.0" lower="-1.8757" upper="1.4615" velocity="1.0" />
    <axis xyz="0 -1 0" />
  </joint>
  <link name="left_arm_elbow_yaw">
    <visual>
      <origin rpy="0 0 1.5708" xyz="0 0 0" />
      <geometry>
        <mesh filename="package://cyton_gamma_1500_description/meshes/arm/elbow_yaw.dae" />
      </geometry>
    </visual>
    <collision>
      <origin rpy="1.5708 0 1.5708" xyz="0 0.0172 0.047" />
      <geometry>
        <box size="0.0535 0.1160 0.053" />
      </geometry>
    </collision>
    <!--inertial>
        <mass value="${small_mass}" />
        <origin rpy="0 0 0" xyz="0 0 0"/>
        <inertia ixx=".0227" iyy=".0227" izz=".0227"
                 ixy="0" ixz="0" iyz="0"/>
      </inertial-->
    <inertial>
      <mass value="0.45" />
      <origin xyz="0 0 0" />
      <inertia ixx="0.0126334824466" ixy="0.0" ixz="0.0" iyy="0.0126354793208" iyz="0.0" izz="0.000212671789931" />
    </inertial>
  </link>
  <joint name="left_arm_joint5" type="revolute">
    <parent link="left_arm_elbow_yaw" />
    <child link="left_arm_wrist_pitch" />
    <origin rpy="0 0 3.14159265359" xyz="-0.02626 0.018 0.0718" />
    <limit effort="100.0" lower="-1.5766" upper="1.5382" velocity="1.0" />
    <axis xyz="-1 0 0" />
  </joint>
  <link name="left_arm_wrist_pitch">
    <visual>
      <origin rpy="1.5708 0 1.5708" xyz="0 0 0" />
      <geometry>
        <mesh filename="package://cyton_gamma_1500_description/meshes/arm/wrist_pitch.dae" />
      </geometry>
    </visual>
    <!--inertial>
        <mass value="${small_mass}" />
        <origin rpy="0 0 0" xyz="0 0 0"/>
        <inertia ixx=".0127" iyy=".0127" izz=".0127"
                  ixy="0" ixz="0" iyz="0"/>
      </inertial-->
    <!--inertial>
        <mass value="${small_mass}"/>
        <origin rpy="0 0 0" xyz="0 0 0"/>
        <inertia ixx="${small_inertial_value}" ixy="0" ixz="0"
                iyy="${small_inertial_value}" iyz="0" izz="${small_inertial_value}"/>
      </inertial-->
    <inertial>
      <mass value="0.3" />
      <origin xyz="0 0 0" />
      <inertia ixx="0.00540632283747" ixy="0.0" ixz="0.0" iyy="0.00540765408694" iyz="0.0" izz="0.000141781193287" />
    </inertial>
  </link>
  <joint name="left_arm_joint6" type="revolute">
    <parent link="left_arm_wrist_pitch" />
    <child link="left_arm_Wrist" />
    <origin rpy="0 3.14 0" xyz="-0.026255 0.0 0.115" />
    <limit effort="100.0" lower="-2.5279" upper="2.5355" velocity="1.0" />
    <axis xyz="0 0 -1" />
  </joint>
  <link name="left_arm_Wrist">
    <visual>
      <origin rpy="0.0 0 -1.57" xyz=" -0.013 0.015 0.0359" />
      <geometry>
        <mesh filename="package://cyton_gamma_1500_description/meshes/arm/wrist.dae" />
      </geometry>
    </visual>
    <collision>
      <origin rpy="0.0 0 -1.57" xyz="-0.013 0 0.0359" />
      <geometry>
        <box size="0.06 0.09 0.1" />
      </geometry>
    </collision>
    <!--inertial>
        <mass value="${small_mass}"/>
        <origin rpy="0 0 0" xyz="0 0 0"/>
        <inertia ixx="${small_inertial_value}" ixy="0" ixz="0"
                iyy="${small_inertial_value}" iyz="0" izz="${small_inertial_value}"/>
      </inertial-->
    <inertial>
      <mass value="0.5" />
      <origin xyz="0 0 0" />
      <inertia ixx="0.00067770806225" ixy="0.0" ixz="0.0" iyy="0.000679926811362" iyz="0.0" izz="0.000236301988812" />
    </inertial>
  </link>
  <link name="left_arm_Motor_+_Base">
    <visual>
      <origin rpy="0.0 0 0" xyz=" 0 -0.045 0" />
      <geometry>
        <mesh filename="package://cyton_gamma_1500_description/meshes/gripper/Motor_+_Base.dae" />
      </geometry>
    </visual>
    <!--inertial>
        <mass value="${small_mass}"/>
        <origin rpy="0 0 0" xyz="0 0 0"/>
        <inertia ixx="${small_inertial_value}" ixy="0" ixz="0"
                iyy="${small_inertial_value}" iyz="0" izz="${small_inertial_value}"/>
      </inertial-->
    <inertial>
      <mass value="0.08" />
      <origin rpy="0 0 0" xyz="0 0 0" />
      <inertia ixx="0.00010843328996" ixy="0.0" ixz="0.0" iyy="0.000108788289818" iyz="0.0" izz="3.780831821e-05" />
    </inertial>
  </link>
  <joint name="left_arm_wrist_to_motor_+_base" type="fixed">
    <parent link="left_arm_Wrist" />
    <child link="left_arm_Motor_+_Base" />
    <origin xyz="0 0.022 0" />
  </joint>
  <link name="left_arm_right_link_front">
    <visual>
      <origin rpy="0 -0.6 0" xyz="0 0 0" />
      <geometry>
        <mesh filename="package://cyton_gamma_1500_description/meshes/gripper/right_link_front.dae" />
      </geometry>
    </visual>
    <!--inertial>
        <mass value="${small_mass}"/>
        <origin rpy="0 0 0" xyz="0 0 0"/>
        <inertia ixx="${small_inertial_value}" ixy="0" ixz="0"
                iyy="${small_inertial_value}" iyz="0" izz="${small_inertial_value}"/>
      </inertial-->
    <inertial>
      <mass value="0.03" />
      <origin rpy="0 0 0" xyz="0 0 0" />
      <inertia ixx="4.4999982e-06" ixy="0.0" ixz="0.0" iyy="4.4999982e-06" iyz="0.0" izz="4.4999982e-06" />
    </inertial>
  </link>
  <joint name="left_arm_gripper_joint" type="revolute">
    <parent link="left_arm_Motor_+_Base" />
    <child link="left_arm_right_link_front" />
    <origin rpy="0 1.75 0" xyz="0 0 0" />
    <limit effort="1000.0" lower="-1.5" upper="-0.1" velocity="0.5" />
    <axis xyz="0 1 0" />
  </joint>
  <link name="left_arm_right_link_back">
    <visual>
      <origin rpy="0.0 0 0" xyz="0 0 0" />
      <geometry>
        <mesh filename="package://cyton_gamma_1500_description/meshes/gripper/right_link_back.dae" />
      </geometry>
    </visual>
    <!--inertial>
        <mass value="${small_mass}"/>
        <origin rpy="0 0 0" xyz="0 0 0"/>
        <inertia ixx="${small_inertial_value}" ixy="0" ixz="0"
                iyy="${small_inertial_value}" iyz="0" izz="${small_inertial_value}"/>
      </inertial-->
    <inertial>
      <mass value="0.03" />
      <origin rpy="0 0 0" xyz="0 0 0" />
      <inertia ixx="4.4999982e-06" ixy="0.0" ixz="0.0" iyy="4.4999982e-06" iyz="0.0" izz="4.4999982e-06" />
    </inertial>
  </link>
  <joint name="left_arm_motor_base_to_right_link_back" type="revolute">
    <parent link="left_arm_Motor_+_Base" />
    <child link="left_arm_right_link_back" />
    <origin rpy="0 1.75 0" xyz="0.025 -0.0085 0.015" />
    <axis xyz="0 1 0" />
    <limit effort="1000.0" lower="-1.5" upper="-0.1" velocity="0.5" />
    <mimic joint="left_arm_gripper_joint" multiplier="1" offset="0" />
  </joint>
  <link name="left_arm_left_link_front">
    <visual>
      <origin rpy="0 3.142 0" xyz="0 0 0" />
      <geometry>
        <mesh filename="package://cyton_gamma_1500_description/meshes/gripper/left_front_link.dae" />
      </geometry>
    </visual>
    <!--inertial>
        <mass value="${small_mass}"/>
        <origin rpy="0 0 0" xyz="0 0 0"/>
        <inertia ixx="${small_inertial_value}" ixy="0" ixz="0"
                iyy="${small_inertial_value}" iyz="0" izz="${small_inertial_value}"/>
      </inertial-->
    <inertial>
      <mass value="0.03" />
      <origin rpy="0 0 0" xyz="0 0 0" />
      <inertia ixx="4.4999982e-06" ixy="0.0" ixz="0.0" iyy="4.4999982e-06" iyz="0.0" izz="4.4999982e-06" />
    </inertial>
  </link>
  <joint name="left_arm_motor_base_to_left_link_front" type="revolute">
    <parent link="left_arm_Motor_+_Base" />
    <child link="left_arm_left_link_front" />
    <origin rpy="0 -1.75 0" xyz="-0.022 -0.001 0" />
    <axis xyz="0 1 0" />
    <limit effort="1000.0" lower="0.1" upper="1.5" velocity="0.5" />
    <mimic joint="left_arm_gripper_joint" multiplier="-1" offset="0" />
  </joint>
  <link name="left_arm_left_link_back">
    <visual>
      <origin rpy="0 3.14 0" xyz="0 0 0" />
      <geometry>
        <mesh filename="package://cyton_gamma_1500_description/meshes/gripper/left_link_back.dae" />
      </geometry>
    </visual>
    <!--inertial>
        <mass value="${small_mass}"/>
        <origin rpy="0 0 0" xyz="0 0 0"/>
        <inertia ixx="${small_inertial_value}" ixy="0" ixz="0"
                iyy="${small_inertial_value}" iyz="0" izz="${small_inertial_value}"/>
      </inertial-->
    <inertial>
      <mass value="0.03" />
      <origin rpy="0 0 0" xyz="0 0 0" />
      <inertia ixx="4.4999982e-06" ixy="0.0" ixz="0.0" iyy="4.4999982e-06" iyz="0.0" izz="4.4999982e-06" />
    </inertial>
  </link>
  <joint name="left_arm_motor_base_to_left_link_back" type="revolute">
    <parent link="left_arm_Motor_+_Base" />
    <child link="left_arm_left_link_back" />
    <origin rpy="0 -1.75 0" xyz="-0.0469 -0.014 0.0155" />
    <axis xyz="0 1 0" />
    <limit effort="1000.0" lower="0.1" upper="1.5" velocity="0.5" />
    <mimic joint="left_arm_gripper_joint" multiplier="-1" offset="0" />
  </joint>
  <link name="left_arm_one_finger">
    <visual>
      <origin rpy="0 0.003 0" xyz="0 0 0" />
      <geometry>
        <mesh filename="package://cyton_gamma_1500_description/meshes/gripper/one_finger.dae" />
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 -0.05 0" xyz="0.014 -0.001 -0.07" />
      <geometry>
        <!--box size="0.045 0.025 0.169"/-->
        <box size="0.04 0.07 0.165" />
      </geometry>
    </collision>
    <!--inertial>
        <mass value="${small_mass}"/>
        <origin rpy="0 0 0" xyz="0 0 0"/>
        <inertia ixx="${small_inertial_value}" ixy="0" ixz="0"
                iyy="${small_inertial_value}" iyz="0" izz="${small_inertial_value}"/>
      </inertial-->
    <inertial>
      <mass value="0.03" />
      <origin rpy="0 0 0" xyz="0 0 0" />
      <inertia ixx="7.2964970814e-05" ixy="0.0" ixz="0.0" iyy="7.6464969414e-05" iyz="0.0" izz="6.62499735e-06" />
    </inertial>
  </link>
  <joint name="left_arm_left_link_back_to_one_finger" type="revolute">
    <parent link="left_arm_left_link_back" />
    <child link="left_arm_one_finger" />
    <origin rpy="0 1.75 0" xyz="-0.06 0.008 0.0" />
    <axis xyz="0 1 0" />
    <limit effort="1000.0" lower="-1.5" upper="-0.1" velocity="0.5" />
    <mimic joint="left_arm_gripper_joint" multiplier="1" offset="0" />
  </joint>
  <link name="left_arm_two_fingers">
    <visual>
      <origin rpy="0 0.24 0" xyz="0 0 0" />
      <geometry>
        <mesh filename="package://cyton_gamma_1500_description/meshes/gripper/two_fingers.dae" />
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0.1 0" xyz="-0.02 0.024 -0.07" />
      <geometry>
        <box size="0.04 0.07 0.165" />
      </geometry>
    </collision>
    <!--inertial>
        <mass value="${small_mass}"/>
        <origin rpy="0 0 0" xyz="0 0 0"/>
        <inertia ixx="${small_inertial_value}" ixy="0" ixz="0"
                iyy="${small_inertial_value}" iyz="0" izz="${small_inertial_value}"/>
      </inertial-->
    <inertial>
      <mass value="0.03" />
      <origin rpy="0 0 0" xyz="0 0 0" />
      <inertia ixx="7.2964970814e-05" ixy="0.0" ixz="0.0" iyy="7.6464969414e-05" iyz="0.0" izz="6.62499735e-06" />
    </inertial>
  </link>
  <gazebo reference="left_arm_one_finger">
    <mu1 value="50.0" />
    <mu2 value="50.0" />
    <!-- enable gripper finger friction-->
    <material>Gazebo/DepthMapVS</material>
  </gazebo>
  <gazebo reference="left_arm_two_fingers">
    <mu1 value="50.0" />
    <mu2 value="50.0" />
    <!-- enable gripper fingers friction-->
    <material>Gazebo/DepthMapVS</material>
  </gazebo>
  <joint name="left_arm_right_link_back_to_two_fingers" type="revolute">
    <parent link="left_arm_right_link_back" />
    <child link="left_arm_two_fingers" />
    <origin rpy="0 -1.75 0" xyz="0.06 -0.02 0.0" />
    <axis xyz="0 1 0" />
    <limit effort="1000.0" lower="0.1" upper="1.5" velocity="0.5" />
    <mimic joint="left_arm_gripper_joint" multiplier="-1" offset="0" />
  </joint>
  <joint name="left_arm_virtual_endeffector_joint" type="fixed">
    <parent link="left_arm_Wrist" />
    <child link="left_arm_virtual_endeffector" />
    <origin rpy="0 0 0" xyz="-0.012 0.018 -0.130" />
    <!-- set this value also in mbot pregrasp planning gripper matrix -->
  </joint>
  <link name="left_arm_virtual_endeffector">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0" />
      <geometry>
        <sphere radius="0.002" />
      </geometry>
      <material name="grey">
        <color rgba="0.7 0.7 0.7 0.8" />
      </material>
    </visual>
  </link>
  <!-- Camera -->
  <!-- Camera: Colour : Base_Camera_link -->
  <gazebo reference="left_arm_base_camera_link">
    <material>Gazebo/FlatBlack</material>
  </gazebo>
  <!-- Camera: Colour : Camera_link -->
  <gazebo reference="left_arm_camera_link">
    <material>Gazebo/RedTransparent</material>
  </gazebo>
  <!-- Camera: Joint : Wrist to Base_Camera -->
  <joint name="left_arm_joint_base_camera" type="fixed">
    <origin rpy="0 0 0" xyz="0 0 0.02" />
    <parent link="left_arm_Wrist" />
    <child link="left_arm_base_camera_link" />
  </joint>
  <!-- Camera: Base Camera Link -->
  <link name="left_arm_base_camera_link">
    <collision>
      <origin rpy="0 0 0" xyz="0 0.03 0" />
      <geometry>
        <box size="0.01 0.05 0.01" />
      </geometry>
    </collision>
    <visual>
      <origin rpy="0 0 0" xyz="0 0.03 0" />
      <geometry>
        <box size="0.01 0.05 0.01" />
      </geometry>
    </visual>
    <inertial>
      <mass value="0.01" />
      <origin rpy="0 0 0" xyz="0 0.03 0" />
      <inertia ixx="1.666666e-07" ixy="0.0" ixz="0.0" iyy="1.666666e-07" iyz="0.0" izz="1.666666e-07" />
    </inertial>
  </link>
  <!-- Camera: Joint : Base_Camera to Camera -->
  <joint name="{prefix}camera_link" type="fixed">
    <origin rpy="-1.7 1.7 0" xyz="0 0.05 -0.005" />
    <parent link="left_arm_base_camera_link" />
    <child link="left_arm_camera_link" />
  </joint>
  <!-- Camera -->
  <link name="left_arm_camera_link">
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0" />
      <geometry>
        <box size="0.008 0.008 0.008" />
      </geometry>
    </collision>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0" />
      <geometry>
        <box size="0.008 0.008 0.008" />
      </geometry>
    </visual>
    <inertial>
      <mass value="1e-5" />
      <origin rpy="0 0 0" xyz="0 0 0" />
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
    </inertial>
  </link>
  <!-- Camera: plugin -->
  <gazebo reference="left_arm_camera_link">
    <sensor name="camera_grasping" type="camera">
      <update_rate>30.0</update_rate>
      <camera name="head">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>800</width>
          <height>800</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin filename="libgazebo_ros_camera.so" name="camera_controller">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>gripper_camera</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>camera_link</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>
  <!-- to attach objects when grasping -->
  <gazebo>
    <plugin filename="libgazebo_grasp_fix.so" name="gazebo_grasp_fix">
      <arm>
        <arm_name>left_arm_</arm_name>
        <palm_link>left_arm_Wrist</palm_link>
        <gripper_link>left_arm_one_finger</gripper_link>
        <gripper_link>left_arm_two_fingers</gripper_link>
      </arm>
      <forces_angle_tolerance>100</forces_angle_tolerance>
      <update_rate>4</update_rate>
      <grip_count_threshold>1</grip_count_threshold>
      <max_grip_count>8</max_grip_count>
      <release_tolerance>0.003</release_tolerance>
      <disable_collisions_on_attach>false</disable_collisions_on_attach>
      <contact_topic>__default_topic__</contact_topic>
    </plugin>
  </gazebo>
  <!-- we dont know yet the moment of inertia of the robot! -->
  <!-- distance from robot center to wheel center in y direction (lateral direction) -->
  <!-- mbot body (shell) -->
  <link name="base_link">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0.025" />
      <geometry>
        <mesh filename="package://mbot_description/meshes/body/mbot_body.dae" />
      </geometry>
      <material name="black" />
    </visual>
    <collision>
      <geometry>
        <cylinder length="0.515" radius="0.23" />
      </geometry>
      <origin rpy="0 0 0" xyz="0.05 0 0.4" />
    </collision>
    <inertial>
      <mass value="60" />
      <origin rpy="0 0 0" xyz="0.05 0 0.4" />
      <inertia ixx="24.3379902648" ixy="0.0" ixz="0.0" iyy="24.3379902648" iyz="0.0" izz="43.2" />
    </inertial>
  </link>
  <!-- mbot IMU -->
  <link name="imu_link">
    <inertial>
      <mass value="1.001" />
      <origin rpy="0 0 0" xyz="0 0 0" />
      <inertia ixx="1e-09" ixy="0.0" ixz="0.0" iyy="1e-09" iyz="0.0" izz="1e-09" />
    </inertial>
  </link>
  <joint name="imu_joint" type="fixed">
    <parent link="base_link" />
    <child link="imu_link" />
    <origin rpy="0 0 0" xyz="0 0 0.2" />
  </joint>
  <!-- dummy link from which the real wheel will rotate from -->
  <link name="front_left_static">
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0" />
      <mass value="0.01" />
      <inertia ixx="0.0288" ixy="2.20484e-6" ixz="-1.3145e-5" iyy="0.4324" iyz="1.8944e-3" izz="0.4130" />
    </inertial>
  </link>
  <!-- to specify the position of the dummy link w.r.t. base link -->
  <joint name="front_left_static_joint" type="fixed">
    <parent link="base_link" />
    <child link="front_left_static" />
    <origin rpy="0 0 0" xyz="-0.175 0.14429 0.05" />
  </joint>
  <!-- each wheel -->
  <link name="front_left_wheel_link">
    <visual>
      <origin rpy="1.57079632679 0 0" xyz="0 0 0" />
      <geometry>
        <cylinder length="0.05" radius="0.05" />
      </geometry>
      <material name="black" />
    </visual>
    <collision>
      <origin rpy="1.57079632679 0 0" xyz="0 0 0" />
      <geometry>
        <cylinder length="0.05" radius="0.05" />
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0" />
      <mass value="40" />
      <inertia ixx="0.03333332" ixy="0.0" ixz="0.0" iyy="0.03333332" iyz="0.0" izz="0.05" />
    </inertial>
  </link>
  <!-- wheel joints -->
  <joint name="front_left_wheel" type="continuous">
    <parent link="front_left_static" />
    <child link="front_left_wheel_link" />
    <origin rpy="0 0 0" xyz="0 0 0" />
    <axis xyz="0 1 0" />
  </joint>
  <!-- to be able to rotate the wheels with a special plugin -->
  <transmission name="front_wheel_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="front_left_wheel">
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </joint>
    <actuator name="front_left_actuator">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <!-- dummy link from which the real wheel will rotate from -->
  <link name="front_right_static">
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0" />
      <mass value="0.01" />
      <inertia ixx="0.0288" ixy="2.20484e-6" ixz="-1.3145e-5" iyy="0.4324" iyz="1.8944e-3" izz="0.4130" />
    </inertial>
  </link>
  <!-- to specify the position of the dummy link w.r.t. base link -->
  <joint name="front_right_static_joint" type="fixed">
    <parent link="base_link" />
    <child link="front_right_static" />
    <origin rpy="0 0 0" xyz="0.175 0.14429 0.05" />
  </joint>
  <!-- each wheel -->
  <link name="front_right_wheel_link">
    <visual>
      <origin rpy="1.57079632679 0 0" xyz="0 0 0" />
      <geometry>
        <cylinder length="0.05" radius="0.05" />
      </geometry>
      <material name="black" />
    </visual>
    <collision>
      <origin rpy="1.57079632679 0 0" xyz="0 0 0" />
      <geometry>
        <cylinder length="0.05" radius="0.05" />
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0" />
      <mass value="40" />
      <inertia ixx="0.03333332" ixy="0.0" ixz="0.0" iyy="0.03333332" iyz="0.0" izz="0.05" />
    </inertial>
  </link>
  <!-- wheel joints -->
  <joint name="front_right_wheel" type="continuous">
    <parent link="front_right_static" />
    <child link="front_right_wheel_link" />
    <origin rpy="0 0 0" xyz="0 0 0" />
    <axis xyz="0 1 0" />
  </joint>
  <!-- to be able to rotate the wheels with a special plugin -->
  <transmission name="front_wheel_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="front_right_wheel">
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </joint>
    <actuator name="front_right_actuator">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <!-- dummy link from which the real wheel will rotate from -->
  <link name="rear_left_static">
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0" />
      <mass value="0.01" />
      <inertia ixx="0.0288" ixy="2.20484e-6" ixz="-1.3145e-5" iyy="0.4324" iyz="1.8944e-3" izz="0.4130" />
    </inertial>
  </link>
  <!-- to specify the position of the dummy link w.r.t. base link -->
  <joint name="rear_left_static_joint" type="fixed">
    <parent link="base_link" />
    <child link="rear_left_static" />
    <origin rpy="0 0 0" xyz="-0.175 -0.14429 0.05" />
  </joint>
  <!-- each wheel -->
  <link name="rear_left_wheel_link">
    <visual>
      <origin rpy="1.57079632679 0 0" xyz="0 0 0" />
      <geometry>
        <cylinder length="0.05" radius="0.05" />
      </geometry>
      <material name="black" />
    </visual>
    <collision>
      <origin rpy="1.57079632679 0 0" xyz="0 0 0" />
      <geometry>
        <cylinder length="0.05" radius="0.05" />
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0" />
      <mass value="40" />
      <inertia ixx="0.03333332" ixy="0.0" ixz="0.0" iyy="0.03333332" iyz="0.0" izz="0.05" />
    </inertial>
  </link>
  <!-- wheel joints -->
  <joint name="rear_left_wheel" type="continuous">
    <parent link="rear_left_static" />
    <child link="rear_left_wheel_link" />
    <origin rpy="0 0 0" xyz="0 0 0" />
    <axis xyz="0 1 0" />
  </joint>
  <!-- to be able to rotate the wheels with a special plugin -->
  <transmission name="rear_wheel_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="rear_left_wheel">
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </joint>
    <actuator name="rear_left_actuator">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <!-- dummy link from which the real wheel will rotate from -->
  <link name="rear_right_static">
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0" />
      <mass value="0.01" />
      <inertia ixx="0.0288" ixy="2.20484e-6" ixz="-1.3145e-5" iyy="0.4324" iyz="1.8944e-3" izz="0.4130" />
    </inertial>
  </link>
  <!-- to specify the position of the dummy link w.r.t. base link -->
  <joint name="rear_right_static_joint" type="fixed">
    <parent link="base_link" />
    <child link="rear_right_static" />
    <origin rpy="0 0 0" xyz="0.175 -0.14429 0.05" />
  </joint>
  <!-- each wheel -->
  <link name="rear_right_wheel_link">
    <visual>
      <origin rpy="1.57079632679 0 0" xyz="0 0 0" />
      <geometry>
        <cylinder length="0.05" radius="0.05" />
      </geometry>
      <material name="black" />
    </visual>
    <collision>
      <origin rpy="1.57079632679 0 0" xyz="0 0 0" />
      <geometry>
        <cylinder length="0.05" radius="0.05" />
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0" />
      <mass value="40" />
      <inertia ixx="0.03333332" ixy="0.0" ixz="0.0" iyy="0.03333332" iyz="0.0" izz="0.05" />
    </inertial>
  </link>
  <!-- wheel joints -->
  <joint name="rear_right_wheel" type="continuous">
    <parent link="rear_right_static" />
    <child link="rear_right_wheel_link" />
    <origin rpy="0 0 0" xyz="0 0 0" />
    <axis xyz="0 1 0" />
  </joint>
  <!-- to be able to rotate the wheels with a special plugin -->
  <transmission name="rear_wheel_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="rear_right_wheel">
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </joint>
    <actuator name="rear_right_actuator">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <!-- mbot head -->
  <link name="head_link">
    <visual>
      <geometry>
        <mesh filename="package://mbot_description/meshes/head/mbot_head.dae" />
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0" />
    </visual>
    <!-- use a box for collision instead of the mesh for simplicity -->
    <collision>
      <geometry>
        <box size="0.35 0.45 0.25" />
        <!-- approximate size of the mbot head bounding box -->
      </geometry>
      <origin rpy="0 0 0" xyz="0.025 0 0.15" />
    </collision>
    <inertial>
      <mass value="2" />
      <origin xyz="0 0 0" />
      <inertia ixx="0.000604" ixy="0" ixz="0" iyy="0.00111" iyz="0" izz="0.000914" />
    </inertial>
  </link>
  <!-- mbot head projected to the ground for perception purposes -->
  <link name="head_link_projected" />
  <!-- laser range finders -->
  <link name="base_laser_front_link">
    <visual>
      <geometry>
        <mesh filename="package://mbot_description/meshes/sensors/hokuyo.dae" />
      </geometry>
    </visual>
    <inertial>
      <mass value="0.1" />
      <origin xyz="0 0 0" />
      <inertia ixx="0.1" ixy="0" ixz="0" iyy="0.1" iyz="0" izz="0.1" />
    </inertial>
  </link>
  <link name="base_laser_rear_link">
    <visual>
      <geometry>
        <mesh filename="package://mbot_description/meshes/sensors/hokuyo.dae" />
      </geometry>
    </visual>
    <inertial>
      <mass value="0.1" />
      <origin xyz="0 0 0" />
      <inertia ixx="0.1" ixy="0" ixz="0" iyy="0.1" iyz="0" izz="0.1" />
    </inertial>
  </link>
  <link name="base_footprint" />
  <!-- base_footprint (at the same level as the laser scanners -->
  <joint name="base_link_to_base_footprint_joint" type="fixed">
    <parent link="base_link" />
    <child link="base_footprint" />
    <origin rpy="0 0 0" xyz="0 0 0.1335" />
  </joint>
  <joint name="base_link_to_laser_front_joint" type="fixed">
    <parent link="base_link" />
    <child link="base_laser_front_link" />
    <origin rpy="0 0 0" xyz="0.2785 0 0.1335" />
  </joint>
  <joint name="base_link_to_laser_back_joint" type="fixed">
    <parent link="base_link" />
    <child link="base_laser_rear_link" />
    <origin rpy="3.14159265359 0 3.14159265359" xyz="-0.2795 0 0.1335" />
  </joint>
  <joint name="base_link_to_head_link_joint" type="revolute">
    <parent link="base_link" />
    <child link="head_link" />
    <limit effort="100.0" lower="-1.57079632679" upper="1.57079632679" velocity="1.0" />
    <axis xyz="0 0 -1.0" />
    <origin rpy="0 0 0" xyz="0.05 0 0.765" />
  </joint>
  <joint name="head_link_to_head_link_projected_joint" type="fixed">
    <parent link="head_link" />
    <child link="head_link_projected" />
    <origin rpy="0 0 0" xyz="0 0 -0.765" />
  </joint>
  <transmission name="head_tran">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="base_link_to_head_link_joint">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="head_motor">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <gazebo>
    <!-- neck, head, odometry controllers -->
    <plugin filename="libgazebo_ros_control.so" name="gazebo_ros_control" />
    <!-- base controller, listen to cmd_vel and transform into force that will be applied to the robot -->
    <plugin filename="libridgeback_ros_force_based_move.so" name="ridgeback_ros_force_based_move">
      <commandTopic>cmd_vel</commandTopic>
      <odometryTopic>odom_diff</odometryTopic>
      <odometryFrame>odom</odometryFrame>
      <odometryRate>50.0</odometryRate>
      <robotBaseFrame>base_link</robotBaseFrame>
      <cmdVelTimeOut>1.0</cmdVelTimeOut>
      <!-- Don't publish a transform: the p3d_base_controller does it. -->
      <publishOdometryTf>0</publishOdometryTf>
      <yaw_velocity_p_gain>100000.0</yaw_velocity_p_gain>
      <x_velocity_p_gain>100000.0</x_velocity_p_gain>
      <y_velocity_p_gain>100000.0</y_velocity_p_gain>
    </plugin>
    <!-- publish perfect odometry as ground truth taken from gazebo/models/pose -->
    <plugin filename="libmbot_gazebo_ros_p3d.so" name="p3d_base_controller">
      <alwaysOn>true</alwaysOn>
      <updateRate>50.0</updateRate>
      <bodyName>base_link</bodyName>
      <topicName>odom_gt</topicName>
      <gaussianNoise>0.0</gaussianNoise>
      <!-- 0.01 if you want to add noise-->
      <frameName>world</frameName>
      <!-- gazebo frame! not robot frame -->
      <xyzOffsets>0 0 0</xyzOffsets>
      <rpyOffsets>0 0 0</rpyOffsets>
    </plugin>
    <!-- IMU simulation plugin config -->
    <plugin filename="libhector_gazebo_ros_imu.so" name="imu_controller">
      <updateRate>50.0</updateRate>
      <bodyName>imu_link</bodyName>
      <topicName>imu/data</topicName>
      <accelDrift>0.005 0.005 0.005</accelDrift>
      <accelGaussianNoise>0.005 0.005 0.005</accelGaussianNoise>
      <rateDrift>0.00005 0.00005 0.00005</rateDrift>
      <rateGaussianNoise>0.00005 0.00005 0.00005</rateGaussianNoise>
      <headingDrift>0.005</headingDrift>
      <headingGaussianNoise>0.005</headingGaussianNoise>
    </plugin>
  </gazebo>
  <!-- All static links get collapsed down to base_link in Gazebo, so that's
       the one to apply the colour to (in Gazebo 5+). -->
  <gazebo reference="base_link">
    <material>Gazebo/DepthMapVS</material>
    <gravity>true</gravity>
  </gazebo>
  <gazebo reference="head_link">
    <material>Gazebo/DepthMapVS</material>
    <gravity>true</gravity>
  </gazebo>
  <!-- Wheel friction -->
  <gazebo reference="front_left_wheel_link">
    <material>Gazebo/DarkGrey</material>
    <mu1>0.1</mu1>
    <mu2>0.1</mu2>
  </gazebo>
  <gazebo reference="front_right_wheel_link">
    <material>Gazebo/DarkGrey</material>
    <mu1>0.1</mu1>
    <mu2>0.1</mu2>
  </gazebo>
  <gazebo reference="rear_left_wheel_link">
    <material>Gazebo/DarkGrey</material>
    <mu1>0.1</mu1>
    <mu2>0.1</mu2>
  </gazebo>
  <gazebo reference="rear_right_wheel_link">
    <material>Gazebo/DarkGrey</material>
    <mu1>0.1</mu1>
    <mu2>0.1</mu2>
  </gazebo>
  <!-- Refer to Hokuyo URG-04LX-UG01 datasheet & /scan_front topic on real mbot-->
  <gazebo reference="base_laser_front_link">
    <sensor name="front_hokuyo_sensor" type="ray">
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <update_rate>4.3</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>512</samples>
            <resolution>1</resolution>
            <min_angle>-1.5707963</min_angle>
            <!-- restricted due to base shelf -->
            <max_angle>1.5707963</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.0199999</min>
          <max>5.6</max>
          <resolution>0.001</resolution>
          <!-- res 1mm, accuracy between +-30mm to 120mm -->
        </range>
        <noise>
          <type>gaussian</type>
          <!-- Noise parameters based on published spec for Hokuyo laser
               achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
               stddev of 0.01m will put 99.7% of samples within 0.03m of the true
               reading. -->
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin filename="libgazebo_ros_laser.so" name="gazebo_ros_front_hokuyo_controller">
        <topicName>/scan_front</topicName>
        <frameName>base_laser_front_link</frameName>
      </plugin>
    </sensor>
  </gazebo>
  <!-- Specs from Hokuyo UTM-30LX datasheet & /scan_rear topic on real mbot-->
  <gazebo reference="base_laser_rear_link">
    <sensor name="rear_hokuyo_sensor" type="ray">
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <update_rate>34.5</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>720</samples>
            <resolution>1</resolution>
            <min_angle>-1.570796</min_angle>
            <max_angle>1.570796</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.023</min>
          <max>60.0</max>
          <!-- to be verified, mbot$ rostopic echo /scan_rear range_max -60.0m, datasheet -30.0m -->
          <resolution>0.001</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <!-- Noise parameters based on published spec for Hokuyo laser
               achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
               stddev of 0.01m will put 99.7% of samples within 0.03m of the true
               reading. -->
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin filename="libgazebo_ros_laser.so" name="gazebo_ros_rear_hokuyo_controller">
        <topicName>/scan_rear</topicName>
        <frameName>base_laser_rear_link</frameName>
      </plugin>
    </sensor>
  </gazebo>
  <!-- file taken from: https://github.com/tu-darmstadt-ros-pkg/hector_models, adapted-->
  <!-- offset between camera center and infrared sensor lens -->
  <link name="neck_camera_model_link">
    <inertial>
      <mass value="0.200" />
      <origin rpy="0 0 0" xyz="0 0 0" />
      <inertia ixx="5.8083e-4" ixy="0" ixz="0" iyy="3.0833e-5" iyz="0" izz="5.9083e-4" />
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0.0175 0 0.0205" />
      <geometry>
        <!--box size="0.035 0.185 0.025"/-->
        <mesh filename="package://mbot_description/meshes/sensors/asus_camera_simple.dae" />
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0" />
      <geometry>
        <box size="0.035 0.185 0.025" />
      </geometry>
    </collision>
  </link>
  <link name="neck_camera_link" />
  <joint name="model_to_neck_camera_link" type="fixed">
    <origin rpy="-0.07 0.0 0.065" xyz="0.0475 0.0 0.0405" />
    <parent link="neck_camera_model_link" />
    <child link="neck_camera_link" />
  </joint>
  <joint name="neck_camera_depth_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.0 0.049 0.0" />
    <parent link="neck_camera_link" />
    <child link="neck_camera_depth_frame" />
  </joint>
  <link name="neck_camera_depth_frame" />
  <joint name="neck_camera_depth_optical_joint" type="fixed">
    <origin rpy="-1.57079632679 0.0 -1.57079632679" xyz="0 0 0" />
    <parent link="neck_camera_depth_frame" />
    <child link="neck_camera_depth_optical_frame" />
  </joint>
  <link name="neck_camera_depth_optical_frame" />
  <joint name="neck_camera_rgb_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.0 0.022 0.0" />
    <parent link="neck_camera_link" />
    <child link="neck_camera_rgb_frame" />
  </joint>
  <link name="neck_camera_rgb_frame" />
  <joint name="neck_camera_rgb_optical_joint" type="fixed">
    <origin rpy="-1.57079632679 0.0 -1.57079632679" xyz="0 0 0" />
    <parent link="neck_camera_rgb_frame" />
    <child link="neck_camera_rgb_optical_frame" />
  </joint>
  <link name="neck_camera_rgb_optical_frame" />
  <!-- ASUS Xtion PRO camera for simulation -->
  <gazebo reference="neck_camera_depth_frame">
    <sensor name="neck_camera" type="depth">
      <always_on>true</always_on>
      <update_rate>20.0</update_rate>
      <camera>
        <horizontal_fov>1.0471975512</horizontal_fov>
        <image>
          <format>B8G8R8</format>
          <width>640</width>
          <height>480</height>
        </image>
        <clip>
          <near>0.05</near>
          <far>8.0</far>
        </clip>
      </camera>
      <plugin filename="libgazebo_ros_openni_kinect.so" name="neck_camera_camera_controller">
        <cameraName>neck_camera</cameraName>
        <alwaysOn>true</alwaysOn>
        <updateRate>10</updateRate>
        <imageTopicName>rgb/image_raw</imageTopicName>
        <depthImageTopicName>depth/image_raw</depthImageTopicName>
        <pointCloudTopicName>depth_registered/points</pointCloudTopicName>
        <cameraInfoTopicName>rgb/camera_info</cameraInfoTopicName>
        <depthImageCameraInfoTopicName>depth/camera_info</depthImageCameraInfoTopicName>
        <frameName>neck_camera_depth_optical_frame</frameName>
        <baseline>0.1</baseline>
        <distortion_k1>0.0</distortion_k1>
        <distortion_k2>0.0</distortion_k2>
        <distortion_k3>0.0</distortion_k3>
        <distortion_t1>0.0</distortion_t1>
        <distortion_t2>0.0</distortion_t2>
        <pointCloudCutoff>0.4</pointCloudCutoff>
      </plugin>
    </sensor>
  </gazebo>
  <link name="head_camera_model_link">
    <inertial>
      <mass value="0.200" />
      <origin rpy="0 0 0" xyz="0 0 0" />
      <inertia ixx="5.8083e-4" ixy="0" ixz="0" iyy="3.0833e-5" iyz="0" izz="5.9083e-4" />
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0.0175 0 0.0205" />
      <geometry>
        <!--box size="0.035 0.185 0.025"/-->
        <mesh filename="package://mbot_description/meshes/sensors/asus_camera_simple.dae" />
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0" />
      <geometry>
        <box size="0.035 0.185 0.025" />
      </geometry>
    </collision>
  </link>
  <link name="head_camera_link" />
  <joint name="model_to_head_camera_link" type="fixed">
    <origin rpy="-0.04 0.05 0.06" xyz="0.0525 -0.04 -0.0395" />
    <parent link="head_camera_model_link" />
    <child link="head_camera_link" />
  </joint>
  <joint name="head_camera_depth_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.0 0.049 0.0" />
    <parent link="head_camera_link" />
    <child link="head_camera_depth_frame" />
  </joint>
  <link name="head_camera_depth_frame" />
  <joint name="head_camera_depth_optical_joint" type="fixed">
    <origin rpy="-1.57079632679 0.0 -1.57079632679" xyz="0 0 0" />
    <parent link="head_camera_depth_frame" />
    <child link="head_camera_depth_optical_frame" />
  </joint>
  <link name="head_camera_depth_optical_frame" />
  <joint name="head_camera_rgb_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.0 0.022 0.0" />
    <parent link="head_camera_link" />
    <child link="head_camera_rgb_frame" />
  </joint>
  <link name="head_camera_rgb_frame" />
  <joint name="head_camera_rgb_optical_joint" type="fixed">
    <origin rpy="-1.57079632679 0.0 -1.57079632679" xyz="0 0 0" />
    <parent link="head_camera_rgb_frame" />
    <child link="head_camera_rgb_optical_frame" />
  </joint>
  <link name="head_camera_rgb_optical_frame" />
  <!-- ASUS Xtion PRO camera for simulation -->
  <gazebo reference="head_camera_depth_frame">
    <sensor name="head_camera" type="depth">
      <always_on>true</always_on>
      <update_rate>20.0</update_rate>
      <camera>
        <horizontal_fov>1.0471975512</horizontal_fov>
        <image>
          <format>B8G8R8</format>
          <width>640</width>
          <height>480</height>
        </image>
        <clip>
          <near>0.05</near>
          <far>8.0</far>
        </clip>
      </camera>
      <plugin filename="libgazebo_ros_openni_kinect.so" name="head_camera_camera_controller">
        <cameraName>head_camera</cameraName>
        <alwaysOn>true</alwaysOn>
        <updateRate>10</updateRate>
        <imageTopicName>rgb/image_raw</imageTopicName>
        <depthImageTopicName>depth/image_raw</depthImageTopicName>
        <pointCloudTopicName>depth_registered/points</pointCloudTopicName>
        <cameraInfoTopicName>rgb/camera_info</cameraInfoTopicName>
        <depthImageCameraInfoTopicName>depth/camera_info</depthImageCameraInfoTopicName>
        <frameName>head_camera_depth_optical_frame</frameName>
        <baseline>0.1</baseline>
        <distortion_k1>0.0</distortion_k1>
        <distortion_k2>0.0</distortion_k2>
        <distortion_k3>0.0</distortion_k3>
        <distortion_t1>0.0</distortion_t1>
        <distortion_t2>0.0</distortion_t2>
        <pointCloudCutoff>0.4</pointCloudCutoff>
      </plugin>
    </sensor>
  </gazebo>
  <!-- connect neck 3D camera with the head -->
  <joint name="neck_link_to_head_camera" type="fixed">
    <parent link="head_link" />
    <child link="neck_camera_model_link" />
    <origin rpy="0 0.8 0" xyz="0.12 0 0.05" />
  </joint>
  <!-- head camera (can tilt) -->
  <joint name="head_link_to_head_camera_link" type="revolute">
    <parent link="head_link" />
    <child link="head_camera_model_link" />
    <limit effort="1" lower="-0.1" upper="2.1" velocity="5.23598775598" />
    <axis xyz="0 -1.0 0" />
    <origin rpy="0.04 1.395 0" xyz="0.19 -0.005 0.290" />
  </joint>
  <transmission name="head_camera_tran">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="head_link_to_head_camera_link">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="motor2">
      <hardwareInterface>hardwareInterface/EffortJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <!-- -0.5 to facilitate grasping objects -->
  <!-- connect mbot body with the arm -->
  <joint name="base_link_to_left_arm" type="fixed">
    <parent link="base_link" />
    <child link="left_arm_base_link" />
    <origin rpy="-1.57079632679 2.092253 0.0" xyz="0.048 0.111 0.6365" />
  </joint>
</robot>
